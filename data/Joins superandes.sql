
-- QUERY PARA ENCONTRAR SI UNA SUCURSAL TIENE EL POTENCIAL DE VENDER UN PRODUCTO
SELECT PRODUCTO.ID, CATEGORIASUCURSAL.IDSUCURSAL
FROM PRODUCTO
INNER JOIN TIPOPRODUCTO ON PRODUCTO.IDTIPOPRODUCTO = TIPOPRODUCTO.ID
INNER JOIN CATEGORIASUCURSAL ON TIPOPRODUCTO.IDCATEGORIA = CATEGORIASUCURSAL.IDCATEGORIA
WHERE PRODUCTO.ID = 24 AND CATEGORIASUCURSAL.IDSUCURSAL = 38;
-------------
-- QUERY PARA CONTAR LA CANTIDAD DE DE UN PRODUCTO QUE TIENE UNA SUCURSAL EN BODEGA
SELECT PRODUCTOBODEGA.IDPRODUCTO, SUM (PRODUCTOBODEGA.CANTIDAD)
FROM BODEGA
INNER JOIN PRODUCTOBODEGA ON BODEGA.ID = productobodega.idbodega
WHERE BODEGA.IDSUCURSAL = 38 AND PRODUCTOBODEGA.IDPRODUCTO = 23
GROUP BY PRODUCTOBODEGA.IDPRODUCTO;






-- QUERY PARA CONTAR LA CANTIDAD DE DE UN PRODUCTO QUE TIENE UNA SUCURSAL EN ESTANTE
SELECT PRODUCTOESTANTE.IDPRODUCTO, SUM (PRODUCTOESTANTE.CANTIDAD)
FROM ESTANTE
INNER JOIN PRODUCTOESTANTE ON ESTANTE.ID = PRODUCTOESTANTE.IDESTANTE
WHERE ESTANTE.IDSUCURSAL = 38 AND PRODUCTOESTANTE.IDPRODUCTO = 23
GROUP BY PRODUCTOESTANTE.IDPRODUCTO;

-------------




--QUERY PARA ENCONTRAR LA CAPACIDAD TOTAL DE UN TIPO DE PRODUCTO EN BODEGA

SELECT BODEGA.IDSUCURSAL, BODEGA.IDTIPOPRODUCTO, SUM( BODEGA.VOLUMEN), SUM (BODEGA.PESO)
FROM BODEGA
WHERE BODEGA.IDTIPOPRODUCTO = 11 AND BODEGA.IDSUCURSAL = 38
GROUP BY BODEGA.IDSUCURSAL, BODEGA.IDTIPOPRODUCTO;
---------------------


-- BODEGA
SELECT BODEGA.IDSUCURSAL, BODEGA.IDTIPOPRODUCTO, SUM (PRODUCTOBODEGA.CANTIDAD * PRODUCTO.VOLEMPAQUE), SUM ( PRODUCTOBODEGA.CANTIDAD * PRODUCTO.PESOEMPAQUE)
FROM PRODUCTOBODEGA
INNER JOIN PRODUCTO ON PRODUCTOBODEGA.IDPRODUCTO = PRODUCTO.ID
INNER JOIN BODEGA ON BODEGA.ID = PRODUCTOBODEGA.IDBODEGA
WHERE BODEGA.IDSUCURSAL = 38 AND BODEGA.IDTIPOPRODUCTO = 11
GROUP BY BODEGA.IDSUCURSAL, BODEGA.IDTIPOPRODUCTO;
---ESTANTE
SELECT ESTANTE.IDSUCURSAL, ESTANTE.IDTIPOPRODUCTO, SUM (PRODUCTOESTANTE.CANTIDAD * PRODUCTO.VOLEMPAQUE), SUM ( PRODUCTOESTANTE.CANTIDAD * PRODUCTO.PESOEMPAQUE)
FROM PRODUCTOESTANTE
INNER JOIN PRODUCTO ON PRODUCTOESTANTE.IDPRODUCTO = PRODUCTO.ID
INNER JOIN ESTANTE ON ESTANTE.ID = PRODUCTOESTANTE.IDESTANTE
WHERE ESTANTE.IDSUCURSAL = 38 AND ESTANTE.IDTIPOPRODUCTO = 11
GROUP BY ESTANTE.IDSUCURSAL, ESTANTE.IDTIPOPRODUCTO;

--Verificar que una SUCURSAL si ofrece el tipo de producto
SELECT *
FROM TIPOPRODUCTO
INNER JOIN CATEGORIASUCURSAL ON TIPOPRODUCTO.IDCATEGORIA = CATEGORIASUCURSAL.IDCATEGORIA
WHERE TIPOPRODUCTO.ID = 11;



SELECT PRODUCTOESTANTE.IDPRODUCTO, SUM (PRODUCTOESTANTE.CANTIDAD)
FROM ESTANTE
INNER JOIN PRODUCTOESTANTE ON ESTANTE.ID = PRODUCTOESTANTE.IDESTANTE
WHERE ESTANTE.IDSUCURSAL = 38 AND PRODUCTOESTANTE.IDPRODUCTO = 23
GROUP BY PRODUCTOESTANTE.IDPRODUCTO;

UPDATE (SELECT ESTANTE.ID,ESTANTE.IDSUCURSAL, PRODUCTOESTANTE.IDPRODUCTO, PRODUCTOESTANTE.CANTIDAD
        FROM ESTANTE
        INNER JOIN PRODUCTOESTANTE ON ESTANTE.ID = PRODUCTOESTANTE.IDESTANTE
        WHERE ESTANTE.IDSUCURSAL = 38 AND PRODUCTOESTANTE.IDPRODUCTO = 23) T
SET T.CANTIDAD = 15;

------
SELECT VENDE.idProducto, PRODUCTO.nombre, VENDE.precio, PRODUCTOESTANTE.cantidad, PRODUCTOESTANTE.IDESTANTE
FROM ESTANTE
INNER JOIN PRODUCTOESTANTE ON ESTANTE.id = PRODUCTOESTANTE.idEstante
INNER JOIN VENDE ON PRODUCTOESTANTE.idProducto = VENDE.idProducto
INNER JOIN PRODUCTO ON VENDE.idProducto = PRODUCTO.id
WHERE VENDE.idSucursal = 38;

___
--- Tabla carrito
SELECT VENDECARRITO.IDPRODUCTO AS IDPRODUCTO, Estante.Id AS ESTANTE, PRODUCTO.NOMBRE AS NOMBRE, vendecarrito.cantidadcarrito AS CANTIDAD, VENDE.PRECIO AS PRECIO, (VENDE.PRECIO * VENDECARRITO.CANTIDADCARRITO)AS SUBTOTAL
FROM((VENDECARRITO
INNER JOIN CARRITOCOMPRAS ON CARRITOCOMPRAS.id = VENDECARRITO.idCarrito
INNER JOIN VENDE ON CARRITOCOMPRAS.idSucursal = VENDE.idSucursal AND VENDE.idProducto = VENDECARRITO.idProducto)
INNER JOIN PRODUCTO  ON VENDECARRITO.IdProducto = PRODUCTO.id)
INNER JOIN ESTANTE ON ESTANTE.idSucursal = CARRITOCOMPRAS.idSucursal AND ESTANTE.IDTIPOPRODUCTO = PRODUCTO.IDTIPOPRODUCTO
WHERE CARRITOCOMPRAS.id = 143;

DELETE FROM ORDEN;

SELECT *
FROM ORDEN;

SELECT * FROM PRODUCTO;

SELECT * FROM TIPOPRODUCTO;

select * from cliente;
SELECT * FROM ESTANTE;
SELECT * FROM PRODUCTOESTANTE;
